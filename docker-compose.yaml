services:
  db:
    image: postgres:15-alpine
    container_name: avito-pvz-db
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - ${DB_PORT}:${DB_PORT}
    volumes:
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USERNAME} -d ${DB_NAME}'"]
      interval: 5s
      timeout: 10s
      retries: 5
      start_period: 10s
    networks:
      - avito-network

  avito-pvz-service:
    build:
      context: .
      dockerfile: Dockerfile
    container_name:  avito-pvz-service
    environment:
      SERVICE_PORT: ${API_PORT}
      DB_USER: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
    ports:
      - ${API_PORT}:${API_PORT}
    volumes:
      - ./migrations:/app/migrations
    depends_on:
      db:
        condition: service_healthy
    networks:
      - avito-network

volumes:
  postgres_data:

networks:
  avito-network: